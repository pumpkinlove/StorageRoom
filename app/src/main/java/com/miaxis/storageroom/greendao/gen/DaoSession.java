package com.miaxis.storageroom.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.miaxis.storageroom.bean.Box;
import com.miaxis.storageroom.bean.Config;
import com.miaxis.storageroom.bean.Escort;
import com.miaxis.storageroom.bean.Task;
import com.miaxis.storageroom.bean.TaskBox;
import com.miaxis.storageroom.bean.TaskEscort;
import com.miaxis.storageroom.bean.TimeStamp;
import com.miaxis.storageroom.bean.Worker;

import com.miaxis.storageroom.greendao.gen.BoxDao;
import com.miaxis.storageroom.greendao.gen.ConfigDao;
import com.miaxis.storageroom.greendao.gen.EscortDao;
import com.miaxis.storageroom.greendao.gen.TaskDao;
import com.miaxis.storageroom.greendao.gen.TaskBoxDao;
import com.miaxis.storageroom.greendao.gen.TaskEscortDao;
import com.miaxis.storageroom.greendao.gen.TimeStampDao;
import com.miaxis.storageroom.greendao.gen.WorkerDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig boxDaoConfig;
    private final DaoConfig configDaoConfig;
    private final DaoConfig escortDaoConfig;
    private final DaoConfig taskDaoConfig;
    private final DaoConfig taskBoxDaoConfig;
    private final DaoConfig taskEscortDaoConfig;
    private final DaoConfig timeStampDaoConfig;
    private final DaoConfig workerDaoConfig;

    private final BoxDao boxDao;
    private final ConfigDao configDao;
    private final EscortDao escortDao;
    private final TaskDao taskDao;
    private final TaskBoxDao taskBoxDao;
    private final TaskEscortDao taskEscortDao;
    private final TimeStampDao timeStampDao;
    private final WorkerDao workerDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        boxDaoConfig = daoConfigMap.get(BoxDao.class).clone();
        boxDaoConfig.initIdentityScope(type);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        escortDaoConfig = daoConfigMap.get(EscortDao.class).clone();
        escortDaoConfig.initIdentityScope(type);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        taskBoxDaoConfig = daoConfigMap.get(TaskBoxDao.class).clone();
        taskBoxDaoConfig.initIdentityScope(type);

        taskEscortDaoConfig = daoConfigMap.get(TaskEscortDao.class).clone();
        taskEscortDaoConfig.initIdentityScope(type);

        timeStampDaoConfig = daoConfigMap.get(TimeStampDao.class).clone();
        timeStampDaoConfig.initIdentityScope(type);

        workerDaoConfig = daoConfigMap.get(WorkerDao.class).clone();
        workerDaoConfig.initIdentityScope(type);

        boxDao = new BoxDao(boxDaoConfig, this);
        configDao = new ConfigDao(configDaoConfig, this);
        escortDao = new EscortDao(escortDaoConfig, this);
        taskDao = new TaskDao(taskDaoConfig, this);
        taskBoxDao = new TaskBoxDao(taskBoxDaoConfig, this);
        taskEscortDao = new TaskEscortDao(taskEscortDaoConfig, this);
        timeStampDao = new TimeStampDao(timeStampDaoConfig, this);
        workerDao = new WorkerDao(workerDaoConfig, this);

        registerDao(Box.class, boxDao);
        registerDao(Config.class, configDao);
        registerDao(Escort.class, escortDao);
        registerDao(Task.class, taskDao);
        registerDao(TaskBox.class, taskBoxDao);
        registerDao(TaskEscort.class, taskEscortDao);
        registerDao(TimeStamp.class, timeStampDao);
        registerDao(Worker.class, workerDao);
    }
    
    public void clear() {
        boxDaoConfig.clearIdentityScope();
        configDaoConfig.clearIdentityScope();
        escortDaoConfig.clearIdentityScope();
        taskDaoConfig.clearIdentityScope();
        taskBoxDaoConfig.clearIdentityScope();
        taskEscortDaoConfig.clearIdentityScope();
        timeStampDaoConfig.clearIdentityScope();
        workerDaoConfig.clearIdentityScope();
    }

    public BoxDao getBoxDao() {
        return boxDao;
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public EscortDao getEscortDao() {
        return escortDao;
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

    public TaskBoxDao getTaskBoxDao() {
        return taskBoxDao;
    }

    public TaskEscortDao getTaskEscortDao() {
        return taskEscortDao;
    }

    public TimeStampDao getTimeStampDao() {
        return timeStampDao;
    }

    public WorkerDao getWorkerDao() {
        return workerDao;
    }

}
